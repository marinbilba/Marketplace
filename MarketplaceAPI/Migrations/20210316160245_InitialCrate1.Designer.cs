// <auto-generated />
using System;
using MarketplaceAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MarketplaceAPI.Migrations
{
    [DbContext(typeof(MarketplaceContext))]
    [Migration("20210316160245_InitialCrate1")]
    partial class InitialCrate1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("MarketplaceAPI.Model.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CustomerUsername")
                        .HasColumnType("text");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CustomerUsername")
                        .IsUnique();

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("MarketplaceAPI.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("MarketplaceAPI.Model.Customer", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasKey("Username");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("MarketplaceAPI.Model.CustomerOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CartId")
                        .HasColumnType("integer");

                    b.Property<string>("CustomerUsername")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("OrderHistoryId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CartId")
                        .IsUnique();

                    b.HasIndex("CustomerUsername");

                    b.HasIndex("OrderHistoryId");

                    b.ToTable("CustomerOrder");
                });

            modelBuilder.Entity("MarketplaceAPI.Model.OrderDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CustomerOrderId")
                        .HasColumnType("integer");

                    b.Property<string>("DeliveryAddress")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CustomerOrderId")
                        .IsUnique();

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("MarketplaceAPI.Model.OrderHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CustomerUsername")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CustomerUsername")
                        .IsUnique();

                    b.ToTable("OrderHistory");
                });

            modelBuilder.Entity("MarketplaceAPI.Model.OrderLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CartId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderLine");
                });

            modelBuilder.Entity("MarketplaceAPI.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.Property<byte[]>("Thumbnail")
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("MarketplaceAPI.Model.Cart", b =>
                {
                    b.HasOne("MarketplaceAPI.Model.Customer", "Customer")
                        .WithOne("Cart")
                        .HasForeignKey("MarketplaceAPI.Model.Cart", "CustomerUsername");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MarketplaceAPI.Model.CustomerOrder", b =>
                {
                    b.HasOne("MarketplaceAPI.Model.Cart", "Cart")
                        .WithOne("CustomerOrder")
                        .HasForeignKey("MarketplaceAPI.Model.CustomerOrder", "CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketplaceAPI.Model.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerUsername");

                    b.HasOne("MarketplaceAPI.Model.OrderHistory", null)
                        .WithMany("CustomerOrder")
                        .HasForeignKey("OrderHistoryId");

                    b.Navigation("Cart");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MarketplaceAPI.Model.OrderDetails", b =>
                {
                    b.HasOne("MarketplaceAPI.Model.CustomerOrder", "CustomerOrder")
                        .WithOne("OrderDetails")
                        .HasForeignKey("MarketplaceAPI.Model.OrderDetails", "CustomerOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerOrder");
                });

            modelBuilder.Entity("MarketplaceAPI.Model.OrderHistory", b =>
                {
                    b.HasOne("MarketplaceAPI.Model.Customer", "Customer")
                        .WithOne("OrderHistory")
                        .HasForeignKey("MarketplaceAPI.Model.OrderHistory", "CustomerUsername");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MarketplaceAPI.Model.OrderLine", b =>
                {
                    b.HasOne("MarketplaceAPI.Model.Cart", "Cart")
                        .WithMany("OrderLines")
                        .HasForeignKey("CartId");

                    b.HasOne("MarketplaceAPI.Model.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MarketplaceAPI.Model.Product", b =>
                {
                    b.HasOne("MarketplaceAPI.Model.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MarketplaceAPI.Model.Cart", b =>
                {
                    b.Navigation("CustomerOrder");

                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("MarketplaceAPI.Model.Customer", b =>
                {
                    b.Navigation("Cart");

                    b.Navigation("OrderHistory");
                });

            modelBuilder.Entity("MarketplaceAPI.Model.CustomerOrder", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("MarketplaceAPI.Model.OrderHistory", b =>
                {
                    b.Navigation("CustomerOrder");
                });
#pragma warning restore 612, 618
        }
    }
}
